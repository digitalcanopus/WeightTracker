services:
  gateway:
    image: api-gateway
    container_name: apigateway
    build:
      context: ../ApiGateway
      dockerfile: Dockerfile
    ports:
      - "5003:8080"
    depends_on:
      - weight
      - user
    env_file:
      - local.env
  weight:
    image: weight-api
    container_name: weightapi
    build:
      context: ../WeightMicroservice
      dockerfile: Dockerfile
    ports:
      - "5001:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db-weight:
        condition: service_started
    env_file:
      - local.env
  user:
    image: user-api
    container_name: userapi
    build:
      context: ../UserMicroservice
      dockerfile: Dockerfile
    ports:
      - "5002:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db-user:
        condition: service_started
    env_file:
      - local.env
  db-weight:
    image: mongo:8.0.3
    container_name: dbweight
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=Oganesson123
    volumes:
      - ../mongo_weight:/data/db
  db-user:
    image: mongo:8.0.3
    container_name: dbuser
    ports:
      - "27019:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=Oganesson123
    volumes:
      - ../mongo_user:/data/db
  rabbitmq:
    image: rabbitmq:4.1-rc-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 1
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    env_file:
      - local.env
volumes:
  mongo_weight:
  mongo_user:  